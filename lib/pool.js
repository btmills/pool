// Generated by CoffeeScript 1.6.1

({
  define: typeof define === 'function' ? define : function(A, F) {
    return module.exports = F.apply(null, A.map(require));
  }
}).define(['rethinkdb', './queue'], function(r, Queue) {
  'use strict';
  var Pool;
  return Pool = function(opts) {
    var close, done, get, init, pool, q;
    q = new Queue;
    pool = [];
    init = function(callback) {
      if ((pool != null) && pool.length < opts.size) {
        return r.connect(opts.db, function(err, conn) {
          if (err) {
            return callback(err);
          }
          pool.push(conn);
          return init(callback);
        });
      } else {
        return callback(null);
      }
    };
    get = function(callback) {
      if (pool.length > 0) {
        return callback(pool.pop());
      } else {
        return q.enqueue(callback);
      }
    };
    done = function(conn) {
      if (q.length > 0) {
        return process.nextTick(function() {
          return (q.dequeue())(conn);
        });
      } else {
        return pool.push(conn);
      }
    };
    close = function() {
      var _results;
      _results = [];
      while (pool.length > 0) {
        _results.push((pool.pop()).close());
      }
      return _results;
    };
    return {
      init: init,
      get: get,
      done: done,
      close: close
    };
  };
});
